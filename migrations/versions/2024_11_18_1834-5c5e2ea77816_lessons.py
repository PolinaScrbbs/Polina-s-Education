"""lessons

Revision ID: 5c5e2ea77816
Revises: 62c01404d7b4
Create Date: 2024-11-18 18:34:06.261002

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "5c5e2ea77816"
down_revision: Union[str, None] = "62c01404d7b4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "lessons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=64), nullable=False),
        sa.Column("description", sa.String(length=256), nullable=False),
        sa.Column(
            "type",
            sa.Enum("THEORY", "TEST", "PRACTICE", name="lessontype"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "contents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=64), nullable=False),
        sa.Column("description", sa.String(length=256), nullable=False),
        sa.Column("file_path", sa.String(length=128), nullable=False),
        sa.Column("creator_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("last_updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("file_path"),
    )
    op.create_table(
        "lesson_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("lesson_id", sa.Integer(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "SENT",
                "VIEWED",
                "SENT_FOR_REVISION",
                "APPRECIATED",
                name="lessonresultstatus",
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("last_updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["lessons.id"],
        ),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["lessons.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "module_lessons",
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("module_id", sa.Integer(), nullable=False),
        sa.Column("lesson_id", sa.Integer(), nullable=False),
        sa.CheckConstraint("number > 0", name="chk_lesson_number_positive"),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["lessons.id"],
        ),
        sa.ForeignKeyConstraint(
            ["module_id"],
            ["modules.id"],
        ),
        sa.UniqueConstraint("lesson_id", "number", name="uq_lesson_number"),
        sa.UniqueConstraint("module_id", "lesson_id", name="uq_module_lessons"),
    )
    op.create_table(
        "lesson_contents",
        sa.Column("lesson_id", sa.Integer(), nullable=True),
        sa.Column("content_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["content_id"],
            ["contents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["lessons.id"],
        ),
        sa.UniqueConstraint("lesson_id", "content_id", name="uq_lesson_content"),
    )
    op.create_table(
        "lesson_result_contents",
        sa.Column("lesson_result_id", sa.Integer(), nullable=True),
        sa.Column("content_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["content_id"],
            ["contents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["lesson_result_id"],
            ["lesson_results.id"],
        ),
        sa.UniqueConstraint(
            "lesson_result_id", "content_id", name="uq_lesson_result_content"
        ),
    )
    op.create_table(
        "lesson_result_evaluations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("lesson_result_id", sa.Integer(), nullable=False),
        sa.Column("evaluation", sa.CHAR(length=1), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["lesson_result_id"],
            ["lesson_results.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("lesson_result_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("lesson_result_evaluations")
    op.drop_table("lesson_result_contents")
    op.drop_table("lesson_contents")
    op.drop_table("module_lessons")
    op.drop_table("lesson_results")
    op.drop_table("contents")
    op.drop_table("lessons")
    # ### end Alembic commands ###
